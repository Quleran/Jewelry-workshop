from models import JewelrySystem, Client, Order, Product, OrderItem, WorkOrder, Master


def print_menu():
    """–í—ã–≤–æ–¥ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    print("\n" + "=" * 50)
    print("üéØ –°–ò–°–¢–ï–ú–ê –ó–ê–ö–ê–ó–û–í –Æ–í–ï–õ–ò–†–ù–û–ô –ú–ê–°–¢–ï–†–°–ö–û–ô")
    print("=" * 50)
    print("1. üìã –°–æ–∑–¥–∞—Ç—å —É–ª—É—á—à–µ–Ω–Ω—ã–π –∑–∞–∫–∞–∑")
    print("2. üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞")
    print("3. üë®‚Äçüè≠ –ü–∞–Ω–µ–ª—å –º–∞—Å—Ç–µ—Ä–∞")
    print("4. üìä –ü—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤")
    print("5. ‚ÑπÔ∏è  –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–∞—Å—Ç–µ—Ä–∞—Ö")
    print("6. üë• –ü—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤")
    print("7. üîî –¢–µ—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π")
    print("8. üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã")
    print("0. üö™ –í—ã—Ö–æ–¥")
    print("=" * 50)


def create_enhanced_order_menu(system):
    """–ú–µ–Ω—é —Å–æ–∑–¥–∞–Ω–∏—è —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ —É—Å–ª—É–≥–∞–º–∏"""
    print("\nüéÅ –°–û–ó–î–ê–ù–ò–ï –£–õ–£–ß–®–ï–ù–ù–û–ì–û –ó–ê–ö–ê–ó–ê")
    print("-" * 30)

    # –î–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞
    print("\nüë§ –î–ê–ù–ù–´–ï –ö–õ–ò–ï–ù–¢–ê:")
    name = input("–ò–º—è: ").strip()
    surname = input("–§–∞–º–∏–ª–∏—è: ").strip()
    phone = input("–¢–µ–ª–µ—Ñ–æ–Ω: ").strip()
    email = input("Email (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ): ").strip()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∫–ª–∏–µ–Ω—Ç —Å —Ç–∞–∫–∏–º —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º
    existing_client = Client.get_by_phone(phone)
    if existing_client:
        client = existing_client
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–ª–∏–µ–Ω—Ç: {client.name} {client.surname}")
        use_existing = input("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ? (y/n): ").strip().lower()
        if use_existing != 'y':
            # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞
            client.name = name
            client.surname = surname
            client.email = email
            client.save()
            print("‚úÖ –î–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω—ã")
    else:
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞
        client = Client(name=name, surname=surname, phone_number=phone, email=email)
        if client.save():
            print("‚úÖ –ù–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞")
            return

    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ
    print("\nüíé –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û–ë –ò–ó–î–ï–õ–ò–ò:")
    product_type = input("–¢–∏–ø –∏–∑–¥–µ–ª–∏—è (–∫–æ–ª—å—Ü–æ, —Å–µ—Ä—å–≥–∏, –ø–æ–¥–≤–µ—Å–∫–∞ –∏ —Ç.–¥.): ").strip()
    material = input("–ú–∞—Ç–µ—Ä–∏–∞–ª (–∑–æ–ª–æ—Ç–æ, —Å–µ—Ä–µ–±—Ä–æ –∏ —Ç.–¥.): ").strip()
    sample = input("–ü—Ä–æ–±–∞ (585, 925 –∏ —Ç.–¥.): ").strip()
    description = input("–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞: ").strip()

    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏
    print("\nüåü –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –£–°–õ–£–ì–ò:")

    enhancements = {}

    # –°—Ä–æ—á–Ω–æ—Å—Ç—å
    print("\n‚ö° –°–†–û–ß–ù–û–°–¢–¨ –í–´–ü–û–õ–ù–ï–ù–ò–Ø:")
    print("1. –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Å—Ä–æ–∫ (5-7 –¥–Ω–µ–π) - –±–µ–∑ –¥–æ–ø–ª–∞—Ç—ã")
    print("2. –°—Ä–æ—á–Ω—ã–π –∑–∞–∫–∞–∑ (3-4 –¥–Ω—è) +500 —Ä—É–±.")
    print("3. –≠–∫—Å–ø—Ä–µ—Å—Å (1-2 –¥–Ω—è) +1000 —Ä—É–±.")
    print("4. –°—É–ø–µ—Ä-—ç–∫—Å–ø—Ä–µ—Å—Å (–¥–æ 24 —á–∞—Å–æ–≤) +2000 —Ä—É–±.")

    while True:
        urgency_choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç —Å—Ä–æ—á–Ω–æ—Å—Ç–∏ (1-4): ").strip()
        urgency_map = {"1": None, "2": "standard", "3": "express", "4": "super_express"}
        if urgency_choice in urgency_map:
            if urgency_map[urgency_choice]:
                enhancements['urgent'] = urgency_map[urgency_choice]
                urgency_names = {"standard": "–°—Ä–æ—á–Ω—ã–π", "express": "–≠–∫—Å–ø—Ä–µ—Å—Å", "super_express": "–°—É–ø–µ—Ä-—ç–∫—Å–ø—Ä–µ—Å—Å"}
                print(f"‚úÖ –í—ã–±—Ä–∞–Ω–æ: {urgency_names[urgency_map[urgency_choice]]}")
            else:
                print("‚úÖ –í—ã–±—Ä–∞–Ω–æ: –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Å—Ä–æ–∫")
            break
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞")

    # –°—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ
    print("\nüõ°Ô∏è –°–¢–†–ê–•–û–í–ê–ù–ò–ï –ò–ó–î–ï–õ–ò–Ø:")
    print("1. –ë–µ–∑ —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏—è")
    print("2. –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è —Å—Ç—Ä–∞—Ö–æ–≤–∫–∞ (10,000 —Ä—É–±.) +100 —Ä—É–±.")
    print("3. –ü—Ä–µ–º–∏—É–º —Å—Ç—Ä–∞—Ö–æ–≤–∫–∞ (20,000 —Ä—É–±.) +200 —Ä—É–±.")

    while True:
        insurance_choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏—è (1-3): ").strip()
        insurance_map = {"1": None, "2": 10000, "3": 20000}
        if insurance_choice in insurance_map:
            if insurance_map[insurance_choice]:
                enhancements['insurance'] = insurance_map[insurance_choice]
                insurance_amounts = {10000: "10,000 —Ä—É–±.", 20000: "20,000 —Ä—É–±."}
                print(f"‚úÖ –í—ã–±—Ä–∞–Ω–æ: –°—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ –Ω–∞ {insurance_amounts[insurance_map[insurance_choice]]}")
            else:
                print("‚úÖ –í—ã–±—Ä–∞–Ω–æ: –ë–µ–∑ —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏—è")
            break
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞")

    # –ü–æ–¥–∞—Ä–æ—á–Ω–∞—è —É–ø–∞–∫–æ–≤–∫–∞
    print("\nüéÄ –ü–û–î–ê–†–û–ß–ù–ê–Ø –£–ü–ê–ö–û–í–ö–ê:")
    print("1. –ë–µ–∑ —É–ø–∞–∫–æ–≤–∫–∏")
    print("2. –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è —É–ø–∞–∫–æ–≤–∫–∞ +300 —Ä—É–±.")
    print("3. –ü—Ä–µ–º–∏—É–º —É–ø–∞–∫–æ–≤–∫–∞ +800 —Ä—É–±.")
    print("4. –≠–ª–∏—Ç–Ω–∞—è —É–ø–∞–∫–æ–≤–∫–∞ +1500 —Ä—É–±.")

    while True:
        package_choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç —É–ø–∞–∫–æ–≤–∫–∏ (1-4): ").strip()
        package_map = {"1": None, "2": "standard", "3": "premium", "4": "luxury"}
        if package_choice in package_map:
            if package_map[package_choice]:
                enhancements['gift_package'] = package_map[package_choice]
                package_names = {"standard": "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è", "premium": "–ü—Ä–µ–º–∏—É–º", "luxury": "–≠–ª–∏—Ç–Ω–∞—è"}
                print(f"‚úÖ –í—ã–±—Ä–∞–Ω–æ: {package_names[package_map[package_choice]]} —É–ø–∞–∫–æ–≤–∫–∞")
            else:
                print("‚úÖ –í—ã–±—Ä–∞–Ω–æ: –ë–µ–∑ —É–ø–∞–∫–æ–≤–∫–∏")
            break
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞")

    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
    print("\n" + "=" * 40)
    print("üìã –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–ï –ó–ê–ö–ê–ó–ê")
    print("=" * 40)

    try:
        # –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–π –∑–∞–∫–∞–∑ —á–µ—Ä–µ–∑ —Ñ–∞—Å–∞–¥
        client_data = {
            'name': client.name,
            'surname': client.surname,
            'phone_number': client.phone_number,
            'email': client.email
        }

        # –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è add_product
        products_data = [{
            'product_type': product_type,
            'material': material,
            'sample': sample,
            'inform': description  # –ò–°–ü–†–ê–í–õ–ï–ù–û: –±—ã–ª–æ 'product_info', –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 'inform'
        }]

        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–∞—Å–∞–¥ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞
        facade = system.get_order_facade()
        order_result = facade.create_advanced_order(client_data, products_data)

        if order_result:
            # –ü—Ä–∏–º–µ–Ω—è–µ–º –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä—ã –¥–ª—è —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞
            enhanced_order = system.demonstrate_enhanced_order(
                order_result['order'],
                enhancements
            )

            print(f"\nüéâ –£–õ–£–ß–®–ï–ù–ù–´–ô –ó–ê–ö–ê–ó –£–°–ü–ï–®–ù–û –°–û–ó–î–ê–ù!")
            print("=" * 50)
            print(f"üì¶ –ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: #{order_result['order'].id}")
            print(f"üë§ –ö–ª–∏–µ–Ω—Ç: {client.name} {client.surname}")
            print(f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {client.phone_number}")
            print(f"üíé –ò–∑–¥–µ–ª–∏–µ: {product_type} –∏–∑ {material} (–ø—Ä–æ–±–∞ {sample})")
            print(f"üìù –£—Å–ª—É–≥–∏: {enhanced_order.get_description()}")
            print(f"üí∞ –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: {enhanced_order.get_total_cost():.2f} —Ä—É–±.")
            print("=" * 50)

            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—é —Å—Ç–æ–∏–º–æ—Å—Ç–∏
            print("\nüìä –î–ï–¢–ê–õ–ò–ó–ê–¶–ò–Ø –°–¢–û–ò–ú–û–°–¢–ò:")
            additional_info = enhanced_order.get_additional_info()
            if additional_info.get('urgent'):
                print(f"   ‚Ä¢ –°—Ä–æ—á–Ω–æ—Å—Ç—å ({additional_info['urgency_level']}): +{additional_info['urgency_cost']} —Ä—É–±.")
            if additional_info.get('insured'):
                print(f"   ‚Ä¢ –°—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ: +{additional_info['insurance_cost']} —Ä—É–±.")
            if additional_info.get('gift_package'):
                print(f"   ‚Ä¢ –£–ø–∞–∫–æ–≤–∫–∞ ({additional_info['package_type']}): +{additional_info['package_cost']} —Ä—É–±.")

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø—Ä–µ–º–∏—É–º –∑–∞–∫–∞–∑–µ
            notification_service = system.get_notification_service()

            # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç—É
            notification_service.send_notification(
                recipient=client.phone_number,
                message=f"""
üéâ –í–∞—à —É–ª—É—á—à–µ–Ω–Ω—ã–π –∑–∞–∫–∞–∑ #{order_result['order'].id} —Å–æ–∑–¥–∞–Ω!

üíé –î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞:
‚Ä¢ –ò–∑–¥–µ–ª–∏–µ: {product_type} –∏–∑ {material}
‚Ä¢ –£—Å–ª—É–≥–∏: {enhanced_order.get_description()}
‚Ä¢ –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: {enhanced_order.get_total_cost():.2f} —Ä—É–±.

–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è!
                """,
                notification_type='order_created',
                subject=f"–ó–∞–∫–∞–∑ #{order_result['order'].id} —Å–æ–∑–¥–∞–Ω"
            )

            # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –æ –ø—Ä–µ–º–∏—É–º –∑–∞–∫–∞–∑–µ
            if enhancements:
                notification_service.send_notification(
                    recipient="admin@almaz.ru",  # –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–∏—Å—Ç–µ–º—ã
                    message=f"""
üöÄ –°–û–ó–î–ê–ù –ü–†–ï–ú–ò–£–ú –ó–ê–ö–ê–ó #{order_result['order'].id}

üë§ –ö–ª–∏–µ–Ω—Ç: {client.name} {client.surname}
üìû –¢–µ–ª–µ—Ñ–æ–Ω: {client.phone_number}
üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: {enhanced_order.get_total_cost():.2f} —Ä—É–±.
üéÅ –£—Å–ª—É–≥–∏: {enhanced_order.get_description()}

–¢—Ä–µ–±—É–µ—Ç—Å—è –æ—Å–æ–±–æ–µ –≤–Ω–∏–º–∞–Ω–∏–µ!
                    """,
                    notification_type='urgent',
                    subject=f"–ü–†–ï–ú–ò–£–ú –ó–ê–ö–ê–ó #{order_result['order'].id}"
                )

            print("\nüí° –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞")
            print("üìû –° –≤–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–∫–∞–∑–∞: {e}")
        print("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞")


def notification_test_menu(system):
    """–ú–µ–Ω—é —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (Adapter)"""
    print("\nüîî –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–ò–°–¢–ï–ú–´ –£–í–ï–î–û–ú–õ–ï–ù–ò–ô")
    print("-" * 30)

    notification_service = system.get_notification_service()

    print("\nüìß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:")

    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_recipient = input("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω/email –¥–ª—è —Ç–µ—Å—Ç–∞: ").strip()
    test_message = input("–í–≤–µ–¥–∏—Ç–µ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: ").strip()

    print("\nüåê –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–Ω–∞–ª—ã –æ—Ç–ø—Ä–∞–≤–∫–∏:")
    print("1. üìß –¢–æ–ª—å–∫–æ Email")
    print("2. üì± –¢–æ–ª—å–∫–æ SMS")
    print("3. ‚úàÔ∏è –¢–æ–ª—å–∫–æ Telegram")
    print("4. üîÑ –í—Å–µ –∫–∞–Ω–∞–ª—ã")
    print("5. üéØ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–¥–±–æ—Ä")

    choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç (1-5): ").strip()

    channels_map = {
        "1": ["email"],
        "2": ["sms"],
        "3": ["telegram"],
        "4": ["email", "sms", "telegram"],
        "5": None  # –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–¥–±–æ—Ä
    }

    channels = channels_map.get(choice, None)

    results = notification_service.send_notification(
        recipient=test_recipient,
        message=test_message,
        channels=channels,
        subject="–¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ"
    )

    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤–∫–∏:")
    for result in results:
        status_icon = "‚úÖ" if result['status'] == 'success' else "‚ùå"
        print(f"   {status_icon} {result['service'].upper()}: {result['status']}")


def system_statistics_menu(system):
    """–ú–µ–Ω—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å–∏—Å—Ç–µ–º—ã"""
    print("\nüìà –°–¢–ê–¢–ò–°–¢–ò–ö–ê –°–ò–°–¢–ï–ú–´")
    print("-" * 30)

    stats = system.get_system_statistics()

    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞
    print("\nüìä –ê–ù–ê–õ–ò–¢–ò–ö–ê:")

    # –ó–∞–≥—Ä—É–∑–∫–∞ –º–∞—Å—Ç–µ—Ä–æ–≤
    masters = Master.get_all()
    if masters:
        total_capacity = len(masters) * 3  # –ú–∞–∫—Å–∏–º—É–º 3 –∑–∞–∫–∞–∑–∞ –Ω–∞ –º–∞—Å—Ç–µ—Ä–∞
        current_orders = sum(master.current_orders for master in masters)
        load_percentage = (current_orders / total_capacity) * 100 if total_capacity > 0 else 0

        print(f"‚Ä¢ –ó–∞–≥—Ä—É–∑–∫–∞ –º–∞—Å—Ç–µ—Ä–æ–≤: {load_percentage:.1f}%")
        print(f"‚Ä¢ –í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤ –≤ —Ä–∞–±–æ—Ç–µ: {current_orders}")
        print(f"‚Ä¢ –î–æ—Å—Ç—É–ø–Ω–æ —Å–ª–æ—Ç–æ–≤: {total_capacity - current_orders}")

    # –°—Ç–∞—Ç—É—Å—ã –∑–∞–∫–∞–∑–æ–≤
    orders = Order.get_all()
    if orders:
        status_count = {}
        for order in orders:
            status_count[order.status] = status_count.get(order.status, 0) + 1

        print(f"‚Ä¢ –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º:")
        for status, count in status_count.items():
            percentage = (count / len(orders)) * 100
            print(f"  - {status}: {count} ({percentage:.1f}%)")


def assign_order_to_master(order_id):
    """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –º–∞—Å—Ç–µ—Ä—É"""
    available_masters = Master.get_available_masters()

    if available_masters:
        # –ë–µ—Ä–µ–º –ø–µ—Ä–≤–æ–≥–æ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –º–∞—Å—Ç–µ—Ä–∞
        master = available_masters[0]

        # –°–æ–∑–¥–∞–µ–º —Ä–∞–±–æ—á–µ–µ –∑–∞–¥–∞–Ω–∏–µ
        work_order = WorkOrder(order_id=order_id, master_id=master.id)
        if work_order.save():
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞
            order = Order.get_by_id(order_id)
            order.status = 'assigned'
            order.save()

            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –∑–∞–∫–∞–∑–æ–≤ –º–∞—Å—Ç–µ—Ä–∞
            master.current_orders += 1
            master.update_availability()

            print(f"‚úÖ –ó–∞–∫–∞–∑ –Ω–∞–∑–Ω–∞—á–µ–Ω –º–∞—Å—Ç–µ—Ä—É: {master.name} {master.surname}")

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ –∞–¥–∞–ø—Ç–µ—Ä
            system = JewelrySystem()
            notification_service = system.get_notification_service()

            # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç—É
            client = order.get_client()
            notification_service.send_master_assigned_notification(order, master, client)

            return True

    print("‚è≥ –í—Å–µ –º–∞—Å—Ç–µ—Ä–∞ –∑–∞–Ω—è—Ç—ã. –ó–∞–∫–∞–∑ –æ–∂–∏–¥–∞–µ—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è.")
    return False


def check_order_status_menu():
    """–ú–µ–Ω—é –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞"""
    print("\nüîç –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–£–°–ê –ó–ê–ö–ê–ó–ê")
    print("-" * 30)

    try:
        order_id = int(input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: "))
        order = Order.get_by_id(order_id)

        if order:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–∞—Å–∞–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–≤–æ–¥–∫–∏
            system = JewelrySystem()
            facade = system.get_order_facade()
            summary = facade.get_order_summary(order_id)

            if summary:
                # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è—Ö
                notification_service = system.get_notification_service()
                print(f"\nüîî –ò—Å—Ç–æ—Ä–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:")

                # –ò–º–∏—Ç–∞—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
                notifications = [
                    f"–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞ - –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ",
                    f"–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –º–∞—Å—Ç–µ—Ä–∞ - {'–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ' if summary.get('master') else '–æ–∂–∏–¥–∞–Ω–∏–µ'}"
                ]

                for notification in notifications:
                    print(f"   ‚Ä¢ {notification}")
        else:
            print("‚ùå –ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω")

    except ValueError:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ –∑–∞–∫–∞–∑–∞")


def master_panel_menu():
    """–ü–∞–Ω–µ–ª—å –º–∞—Å—Ç–µ—Ä–∞"""
    print("\nüë®‚Äçüè≠ –ü–ê–ù–ï–õ–¨ –ú–ê–°–¢–ï–†–ê")
    print("-" * 30)

    try:
        master_id = int(input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à ID –º–∞—Å—Ç–µ—Ä–∞: "))
        master = Master.get_by_id(master_id)

        if not master:
            print("‚ùå –ú–∞—Å—Ç–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return

        while True:
            print(f"\nüéØ –ú–∞—Å—Ç–µ—Ä: {master.name} {master.surname}")
            print("1. üìã –ú–æ–∏ —Ç–µ–∫—É—â–∏–µ –∑–∞–∫–∞–∑—ã")
            print("2. ‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–∫–∞–∑")
            print("3. üîî –£–≤–µ–¥–æ–º–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞")
            print("4. üìä –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
            print("5. ‚Ü©Ô∏è –ù–∞–∑–∞–¥")

            choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ").strip()

            if choice == "1":
                work_orders = WorkOrder.get_by_master_id(master.id)
                if work_orders:
                    print("\nüìã –í–∞—à–∏ —Ç–µ–∫—É—â–∏–µ –∑–∞–∫–∞–∑—ã:")
                    for wo in work_orders:
                        order = wo.get_order()
                        if order and order.status != 'completed':
                            client = order.get_client()
                            items = OrderItem.get_by_order_id(order.id)
                            product_info = ""
                            for item in items:
                                product = item.get_product()
                                if product:
                                    product_info = f" - {product.type}"
                                    break
                            print(
                                f"–ó–∞–∫–∞–∑ ‚Ññ{order.id}{product_info} - {order.status} - –ö–ª–∏–µ–Ω—Ç: {client.name} {client.surname}")
                else:
                    print("üì≠ –£ –≤–∞—Å –Ω–µ—Ç —Ç–µ–∫—É—â–∏—Ö –∑–∞–∫–∞–∑–æ–≤")

            elif choice == "2":
                try:
                    order_id = int(input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: "))
                    work_order = WorkOrder.get_by_order_id(order_id)

                    if work_order and work_order.master_id == master.id:
                        order = Order.get_by_id(order_id)
                        order.status = 'completed'
                        if order.save():
                            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –∑–∞–∫–∞–∑–æ–≤ –º–∞—Å—Ç–µ—Ä–∞
                            master.current_orders -= 1
                            master.update_availability()

                            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
                            system = JewelrySystem()
                            notification_service = system.get_notification_service()
                            client = order.get_client()
                            notification_service.send_order_ready_notification(order, client)

                            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—á–µ—Ä–µ–¥—å
                            pending_orders = Order.get_by_status('new')
                            for pending_order in pending_orders:
                                if assign_order_to_master(pending_order.id):
                                    break

                            print("‚úÖ –ó–∞–∫–∞–∑ –∑–∞–≤–µ—Ä—à–µ–Ω")
                        else:
                            print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞")
                    else:
                        print("‚ùå –ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω –≤–∞–º")

                except ValueError:
                    print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ –∑–∞–∫–∞–∑–∞")

            elif choice == "3":
                try:
                    order_id = int(input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: "))
                    work_order = WorkOrder.get_by_order_id(order_id)

                    if work_order and work_order.master_id == master.id:
                        order = Order.get_by_id(order_id)
                        client = order.get_client()

                        print("\nüí¨ –¢–∏–ø—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:")
                        print("1. –ó–∞–ø—Ä–æ—Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏")
                        print("2. –£—Ç–æ—á–Ω–µ–Ω–∏–µ –¥–µ—Ç–∞–ª–µ–π")
                        print("3. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ö–æ–¥–µ —Ä–∞–±–æ—Ç—ã")
                        print("4. –ö–∞—Å—Ç–æ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")

                        msg_type = input("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø: ").strip()
                        custom_message = input("–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: ").strip()

                        message_templates = {
                            "1": "–¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –≤–∞—à–µ–º—É –∑–∞–∫–∞–∑—É",
                            "2": "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É—Ç–æ—á–Ω–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞",
                            "3": "–†–∞–±–æ—Ç–∞ –Ω–∞–¥ –≤–∞—à–∏–º –∑–∞–∫–∞–∑–æ–º –∞–∫—Ç–∏–≤–Ω–æ –≤–µ–¥–µ—Ç—Å—è",
                            "4": custom_message
                        }

                        message = message_templates.get(msg_type, custom_message)

                        system = JewelrySystem()
                        notification_service = system.get_notification_service()
                        notification_service.send_notification(
                            recipient=client.phone_number,
                            message=message,
                            subject=f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –º–∞—Å—Ç–µ—Ä–∞ –ø–æ –∑–∞–∫–∞–∑—É #{order_id}"
                        )

                        print("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
                    else:
                        print("‚ùå –ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω –≤–∞–º")

                except ValueError:
                    print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ –∑–∞–∫–∞–∑–∞")

            elif choice == "4":
                print(f"\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ú–ê–°–¢–ï–†–ê:")
                print(f"‚Ä¢ –¢–µ–∫—É—â–∏–µ –∑–∞–∫–∞–∑—ã: {master.current_orders}")
                print(f"‚Ä¢ –°—Ç–∞—Ç—É—Å: {'‚úÖ –°–≤–æ–±–æ–¥–µ–Ω' if master.is_available else '‚ö†Ô∏è –ó–∞–Ω—è—Ç'}")
                print(f"‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞: 3 –∑–∞–∫–∞–∑–∞")

                work_orders = WorkOrder.get_by_master_id(master.id)
                completed_orders = [wo for wo in work_orders if wo.get_order().status == 'completed']
                print(f"‚Ä¢ –ó–∞–≤–µ—Ä—à–µ–Ω–æ –∑–∞–∫–∞–∑–æ–≤: {len(completed_orders)}")

            elif choice == "5":
                break
            else:
                print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")

    except ValueError:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID")


def view_all_orders_menu():
    """–ü—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤"""
    print("\nüìä –í–°–ï –ó–ê–ö–ê–ó–´")
    print("-" * 30)

    orders = Order.get_all()
    if orders:
        for order in orders:
            client = order.get_client()
            work_order = WorkOrder.get_by_order_id(order.id)
            master_info = ""
            if work_order:
                master = work_order.get_master()
                master_info = f" - –ú–∞—Å—Ç–µ—Ä: {master.name} {master.surname}"

            print(f"–ó–∞–∫–∞–∑ ‚Ññ{order.id} - {order.status} - –ö–ª–∏–µ–Ω—Ç: {client.name} {client.surname}{master_info}")
    else:
        print("üì≠ –ù–µ—Ç –∑–∞–∫–∞–∑–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ")


def masters_info_menu():
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–∞—Å—Ç–µ—Ä–∞—Ö"""
    print("\n‚ÑπÔ∏è  –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ú–ê–°–¢–ï–†–ê–•")
    print("-" * 30)

    masters = Master.get_all()
    if masters:
        for master in masters:
            print(master)
    else:
        print("üì≠ –ù–µ—Ç –º–∞—Å—Ç–µ—Ä–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ")


def view_all_clients_menu():
    """–ü—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤"""
    print("\nüë• –í–°–ï –ö–õ–ò–ï–ù–¢–´")
    print("-" * 30)

    clients = Client.get_all()
    if clients:
        for client in clients:
            print(client)
    else:
        print("üì≠ –ù–µ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ")


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    system = JewelrySystem()

    print("üöÄ –°–∏—Å—Ç–µ–º–∞ –∑–∞–ø—É—â–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    print("üí° –¢–µ–ø–µ—Ä—å –≤—Å–µ –∑–∞–∫–∞–∑—ã —Å–æ–∑–¥–∞—é—Ç—Å—è –∫–∞–∫ —É–ª—É—á—à–µ–Ω–Ω—ã–µ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ —É—Å–ª—É–≥–∞–º–∏!")
    print("   ‚Ä¢ ‚ö° –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ä–æ—á–Ω–æ—Å—Ç–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è")
    print("   ‚Ä¢ üõ°Ô∏è –°—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ –∏–∑–¥–µ–ª–∏–π")
    print("   ‚Ä¢ üéÄ –ü–æ–¥–∞—Ä–æ—á–Ω–∞—è —É–ø–∞–∫–æ–≤–∫–∞")
    print("   ‚Ä¢ üîî –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")

    while True:
        print_menu()
        choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ").strip()

        if choice == "1":
            create_enhanced_order_menu(system)
        elif choice == "2":
            check_order_status_menu()
        elif choice == "3":
            master_panel_menu()
        elif choice == "4":
            view_all_orders_menu()
        elif choice == "5":
            masters_info_menu()
        elif choice == "6":
            view_all_clients_menu()
        elif choice == "7":
            notification_test_menu(system)
        elif choice == "8":
            system_statistics_menu(system)
        elif choice == "0":
            print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞")


if __name__ == "__main__":
    main()