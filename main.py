from models import JewelrySystem, Client, Order, Product, OrderItem, WorkOrder, Master


def print_menu():
    """–í—ã–≤–æ–¥ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    print("\n" + "=" * 50)
    print("üéØ –°–ò–°–¢–ï–ú–ê –ó–ê–ö–ê–ó–û–í –Æ–í–ï–õ–ò–†–ù–û–ô –ú–ê–°–¢–ï–†–°–ö–û–ô")
    print("=" * 50)
    print("1. üìã –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑")
    print("2. üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞")
    print("3. üë®‚Äçüè≠ –ü–∞–Ω–µ–ª—å –º–∞—Å—Ç–µ—Ä–∞")
    print("4. üìä –ü—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤")
    print("5. ‚ÑπÔ∏è  –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–∞—Å—Ç–µ—Ä–∞—Ö")
    print("6. üë• –ü—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤")
    print("0. üö™ –í—ã—Ö–æ–¥")
    print("=" * 50)


def create_order_menu(system):
    """–ú–µ–Ω—é —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞"""
    print("\nüìã –°–û–ó–î–ê–ù–ò–ï –ù–û–í–û–ì–û –ó–ê–ö–ê–ó–ê")
    print("-" * 30)

    # –î–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞
    print("\nüë§ –î–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞:")
    name = input("–ò–º—è: ").strip()
    surname = input("–§–∞–º–∏–ª–∏—è: ").strip()
    phone = input("–¢–µ–ª–µ—Ñ–æ–Ω: ").strip()
    email = input("Email (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ): ").strip()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∫–ª–∏–µ–Ω—Ç —Å —Ç–∞–∫–∏–º —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º
    existing_client = Client.get_by_phone(phone)
    if existing_client:
        client = existing_client
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–ª–∏–µ–Ω—Ç: {client.name} {client.surname}")
    else:
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞
        client = Client(name=name, surname=surname, phone_number=phone, email=email)
        if client.save():
            print("‚úÖ –ù–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞")
            return

    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ
    print("\nüíé –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∏–∑–¥–µ–ª–∏–∏:")
    product_type = input("–¢–∏–ø –∏–∑–¥–µ–ª–∏—è (–∫–æ–ª—å—Ü–æ, —Å–µ—Ä—å–≥–∏, –ø–æ–¥–≤–µ—Å–∫–∞ –∏ —Ç.–¥.): ").strip()
    material = input("–ú–∞—Ç–µ—Ä–∏–∞–ª (–∑–æ–ª–æ—Ç–æ, —Å–µ—Ä–µ–±—Ä–æ –∏ —Ç.–¥.): ").strip()
    sample = input("–ü—Ä–æ–±–∞ (585, 925 –∏ —Ç.–¥.): ").strip()
    description = input("–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞: ").strip()

    # –°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑
    order = Order(client_id=client.id)
    if not order.save():
        print("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞")
        return

    # –ù–∞—Ö–æ–¥–∏–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –ø—Ä–æ–¥—É–∫—Ç
    product = Product.get_by_params(product_type, material, sample)
    if not product:
        product = Product(type=product_type, material=material, sample=sample)
        if not product.save():
            print("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞")
            return

    # –°–æ–∑–¥–∞–µ–º –ø–æ–∑–∏—Ü–∏—é –∑–∞–∫–∞–∑–∞
    order_item = OrderItem(order_id=order.id, product_id=product.id, inform=description)
    if not order_item.save():
        print("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–∑–∏—Ü–∏–∏ –∑–∞–∫–∞–∑–∞")
        return

    # –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–∑–Ω–∞—á–∏—Ç—å –∑–∞–∫–∞–∑ –º–∞—Å—Ç–µ—Ä—É
    assign_order_to_master(order.id)

    print(f"\n‚úÖ –ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!")
    print(f"üì¶ –ù–æ–º–µ—Ä –≤–∞—à–µ–≥–æ –∑–∞–∫–∞–∑–∞: {order.id}")
    print("üí° –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —ç—Ç–æ—Ç –Ω–æ–º–µ—Ä –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞")


def assign_order_to_master(order_id):
    """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –º–∞—Å—Ç–µ—Ä—É"""
    available_masters = Master.get_available_masters()

    if available_masters:
        # –ë–µ—Ä–µ–º –ø–µ—Ä–≤–æ–≥–æ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –º–∞—Å—Ç–µ—Ä–∞
        master = available_masters[0]

        # –°–æ–∑–¥–∞–µ–º —Ä–∞–±–æ—á–µ–µ –∑–∞–¥–∞–Ω–∏–µ
        work_order = WorkOrder(order_id=order_id, master_id=master.id)
        if work_order.save():
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞
            order = Order.get_by_id(order_id)
            order.status = 'assigned'
            order.save()

            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –∑–∞–∫–∞–∑–æ–≤ –º–∞—Å—Ç–µ—Ä–∞
            master.current_orders += 1
            master.update_availability()

            print(f"‚úÖ –ó–∞–∫–∞–∑ –Ω–∞–∑–Ω–∞—á–µ–Ω –º–∞—Å—Ç–µ—Ä—É: {master.name} {master.surname}")
            return True

    print("‚è≥ –í—Å–µ –º–∞—Å—Ç–µ—Ä–∞ –∑–∞–Ω—è—Ç—ã. –ó–∞–∫–∞–∑ –æ–∂–∏–¥–∞–µ—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è.")
    return False


def check_order_status_menu():
    """–ú–µ–Ω—é –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞"""
    print("\nüîç –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–£–°–ê –ó–ê–ö–ê–ó–ê")
    print("-" * 30)

    try:
        order_id = int(input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: "))
        order = Order.get_by_id(order_id)

        if order:
            client = order.get_client()
            order_items = OrderItem.get_by_order_id(order.id)
            work_order = WorkOrder.get_by_order_id(order.id)

            print(f"\nüì¶ –ó–∞–∫–∞–∑ ‚Ññ{order.id}")
            print(f"üë§ –ö–ª–∏–µ–Ω—Ç: {client.name} {client.surname}")
            print(f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {client.phone_number}")
            print(f"üìÖ –î–∞—Ç–∞: {order.data}")
            print(f"üìä –°—Ç–∞—Ç—É—Å: {order.status}")

            if work_order:
                master = work_order.get_master()
                print(f"üë®‚Äçüè≠ –ú–∞—Å—Ç–µ—Ä: {master.name} {master.surname}")

            for item in order_items:
                product = item.get_product()
                if product:
                    print(f"üíé –ò–∑–¥–µ–ª–∏–µ: {product.type} –∏–∑ {product.material} (–ø—Ä–æ–±–∞ {product.sample})")
                if item.inform:
                    print(f"üìù –û–ø–∏—Å–∞–Ω–∏–µ: {item.inform}")
        else:
            print("‚ùå –ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω")

    except ValueError:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ –∑–∞–∫–∞–∑–∞")


def master_panel_menu():
    """–ü–∞–Ω–µ–ª—å –º–∞—Å—Ç–µ—Ä–∞"""
    print("\nüë®‚Äçüè≠ –ü–ê–ù–ï–õ–¨ –ú–ê–°–¢–ï–†–ê")
    print("-" * 30)

    try:
        master_id = int(input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à ID –º–∞—Å—Ç–µ—Ä–∞: "))
        master = Master.get_by_id(master_id)

        if not master:
            print("‚ùå –ú–∞—Å—Ç–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return

        while True:
            print(f"\nüéØ –ú–∞—Å—Ç–µ—Ä: {master.name} {master.surname}")
            print("1. üìã –ú–æ–∏ —Ç–µ–∫—É—â–∏–µ –∑–∞–∫–∞–∑—ã")
            print("2. ‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–∫–∞–∑")
            print("3. ‚Ü©Ô∏è –ù–∞–∑–∞–¥")

            choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ").strip()

            if choice == "1":
                work_orders = WorkOrder.get_by_master_id(master.id)
                if work_orders:
                    print("\nüìã –í–∞—à–∏ —Ç–µ–∫—É—â–∏–µ –∑–∞–∫–∞–∑—ã:")
                    for wo in work_orders:
                        order = wo.get_order()
                        if order and order.status != 'completed':
                            client = order.get_client()
                            items = OrderItem.get_by_order_id(order.id)
                            product_info = ""
                            for item in items:
                                product = item.get_product()
                                if product:
                                    product_info = f" - {product.type}"
                                    break
                            print(
                                f"–ó–∞–∫–∞–∑ ‚Ññ{order.id}{product_info} - {order.status} - –ö–ª–∏–µ–Ω—Ç: {client.name} {client.surname}")
                else:
                    print("üì≠ –£ –≤–∞—Å –Ω–µ—Ç —Ç–µ–∫—É—â–∏—Ö –∑–∞–∫–∞–∑–æ–≤")

            elif choice == "2":
                try:
                    order_id = int(input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: "))
                    work_order = WorkOrder.get_by_order_id(order_id)

                    if work_order and work_order.master_id == master.id:
                        order = Order.get_by_id(order_id)
                        order.status = 'completed'
                        if order.save():
                            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –∑–∞–∫–∞–∑–æ–≤ –º–∞—Å—Ç–µ—Ä–∞
                            master.current_orders -= 1
                            master.update_availability()

                            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—á–µ—Ä–µ–¥—å
                            pending_orders = Order.get_by_status('new')
                            for pending_order in pending_orders:
                                if assign_order_to_master(pending_order.id):
                                    break

                            print("‚úÖ –ó–∞–∫–∞–∑ –∑–∞–≤–µ—Ä—à–µ–Ω")
                        else:
                            print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞")
                    else:
                        print("‚ùå –ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω –≤–∞–º")

                except ValueError:
                    print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ –∑–∞–∫–∞–∑–∞")

            elif choice == "3":
                break
            else:
                print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")

    except ValueError:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID")


def view_all_orders_menu():
    """–ü—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤"""
    print("\nüìä –í–°–ï –ó–ê–ö–ê–ó–´")
    print("-" * 30)

    orders = Order.get_all()
    if orders:
        for order in orders:
            client = order.get_client()
            work_order = WorkOrder.get_by_order_id(order.id)
            master_info = ""
            if work_order:
                master = work_order.get_master()
                master_info = f" - –ú–∞—Å—Ç–µ—Ä: {master.name} {master.surname}"

            print(f"–ó–∞–∫–∞–∑ ‚Ññ{order.id} - {order.status} - –ö–ª–∏–µ–Ω—Ç: {client.name} {client.surname}{master_info}")
    else:
        print("üì≠ –ù–µ—Ç –∑–∞–∫–∞–∑–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ")


def masters_info_menu():
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–∞—Å—Ç–µ—Ä–∞—Ö"""
    print("\n‚ÑπÔ∏è  –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ú–ê–°–¢–ï–†–ê–•")
    print("-" * 30)

    masters = Master.get_all()
    if masters:
        for master in masters:
            print(master)
    else:
        print("üì≠ –ù–µ—Ç –º–∞—Å—Ç–µ—Ä–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ")


def view_all_clients_menu():
    """–ü—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤"""
    print("\nüë• –í–°–ï –ö–õ–ò–ï–ù–¢–´")
    print("-" * 30)

    clients = Client.get_all()
    if clients:
        for client in clients:
            print(client)
    else:
        print("üì≠ –ù–µ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ")


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    system = JewelrySystem()

    print("üöÄ –°–∏—Å—Ç–µ–º–∞ –∑–∞–ø—É—â–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")

    while True:
        print_menu()
        choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ").strip()

        if choice == "1":
            create_order_menu(system)
        elif choice == "2":
            check_order_status_menu()
        elif choice == "3":
            master_panel_menu()
        elif choice == "4":
            view_all_orders_menu()
        elif choice == "5":
            masters_info_menu()
        elif choice == "6":
            view_all_clients_menu()
        elif choice == "0":
            print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞")


if __name__ == "__main__":
    main()